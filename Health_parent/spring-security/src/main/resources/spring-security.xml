<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/mvc
						http://www.springframework.org/schema/mvc/spring-mvc.xsd
						http://code.alibabatech.com/schema/dubbo
						http://code.alibabatech.com/schema/dubbo/dubbo.xsd
						http://www.springframework.org/schema/context
						http://www.springframework.org/schema/context/spring-context.xsd
                     http://www.springframework.org/schema/security
                     http://www.springframework.org/schema/security/spring-security.xsd">


    <!--配置可以匿名访问（不登录也能访问）-->
    <!--
        http：用于定义相关权限控制
        指定哪些资源不需要进行权限校验，可以使用通配符
    -->
    <security:http security="none" pattern="/login.html"></security:http>

    <!--
        auto-config:true，表示自动应用一些默认配置(比如框架会默认给一个login.html)，通常都设置为true
        use-expressions:true，是否使用spring security提供的表达式来描述权限
    -->
    <security:http auto-config="true" use-expressions="true">
        <!--配置登录页面-->
        <security:form-login
                login-page="/login.html"
                username-parameter="username"
                password-parameter="password"
                login-processing-url="/login"
                default-target-url="/success.html"
                authentication-failure-url="/index1.html"></security:form-login>
        <!--
            csrf：对应CsrfFilter过滤器
            disabled：是否启用CsrfFilter过滤器，如果使用自定义登录页面需要关闭此项，否则
            登录操作会被禁用（403）
        -->
        <security:csrf disabled="true"></security:csrf>
        <!--
            pattern：描述拦截规则,/**:表示全部拦截
            access：指定访问角色/访问权限
        -->
        <!--<security:intercept-url pattern="/**" access="hasRole('ROLE_ADMIN')"></security:intercept-url>
-->
        <!--只要认证通过就可以访问-->
        <!--<security:intercept-url pattern="/index.html" access="isAuthenticated()" />-->
        <!--&lt;!&ndash;拥有add权限就可以访问b.html页面&ndash;&gt;-->
        <!--<security:intercept-url pattern="/a1.html" access="hasAuthority('add')"/>-->
        <!--&lt;!&ndash;拥有ROLE_ADMIN角色就可以访问c.html页面&ndash;&gt;-->
        <!--<security:intercept-url pattern="/a2.html" access="hasRole('ROLE_ADMIN')"/>-->

        <!--
            logout：退出登录
            logout‐url：退出登录操作对应的请求路径
            logout‐success‐url：退出登录后的跳转页面
        -->
        <security:logout logout-url="/logout" logout-success-url="/login.html" invalidate-session="true"/>

    </security:http>

    <!--配置认证管理-->
    <security:authentication-manager>
        <!--配置认证提供者-->
        <!--<security:authentication-provider>
            <security:user-service>
                &lt;!&ndash;配置一个具体的用户,后期需要从数据库查询&ndash;&gt;
                <security:user name="admin" password="{noop}1234" authorities="ROLE_ADMIN"/>
            </security:user-service>
        </security:authentication-provider>-->
        <!--配置认证提供者-->
        <security:authentication-provider user-service-ref="springSecurityUserService">
            <security:password-encoder ref="passwordEncoder"/>
        </security:authentication-provider>
    </security:authentication-manager>

    <!--开启spring注解扫描-->
    <context:component-scan base-package="com.aoshen"/>
    <!--开启注解方式权限控制-->
    <security:global-method-security pre-post-annotations="enabled" />
    <!--注入-->
    <!--<bean id="userService" class="com.aoshen.test.SpringSecurityUserService"/>
-->
    <!--配置密码加密对象-->
    <bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>


</beans>